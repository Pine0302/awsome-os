
test:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 97 00 00 00       	call   10a0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
    100f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <printf@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <__libc_start_main@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001050 <__cxa_finalize@plt>:
    1050:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001060 <_start>:
    1060:	31 ed                	xor    %ebp,%ebp
    1062:	5e                   	pop    %esi
    1063:	89 e1                	mov    %esp,%ecx
    1065:	83 e4 f0             	and    $0xfffffff0,%esp
    1068:	50                   	push   %eax
    1069:	54                   	push   %esp
    106a:	52                   	push   %edx
    106b:	e8 22 00 00 00       	call   1092 <_start+0x32>
    1070:	81 c3 90 2f 00 00    	add    $0x2f90,%ebx
    1076:	8d 83 c0 d2 ff ff    	lea    -0x2d40(%ebx),%eax
    107c:	50                   	push   %eax
    107d:	8d 83 60 d2 ff ff    	lea    -0x2da0(%ebx),%eax
    1083:	50                   	push   %eax
    1084:	51                   	push   %ecx
    1085:	56                   	push   %esi
    1086:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)
    108c:	e8 af ff ff ff       	call   1040 <__libc_start_main@plt>
    1091:	f4                   	hlt    
    1092:	8b 1c 24             	mov    (%esp),%ebx
    1095:	c3                   	ret    
    1096:	66 90                	xchg   %ax,%ax
    1098:	66 90                	xchg   %ax,%ax
    109a:	66 90                	xchg   %ax,%ax
    109c:	66 90                	xchg   %ax,%ax
    109e:	66 90                	xchg   %ax,%ax

000010a0 <__x86.get_pc_thunk.bx>:
    10a0:	8b 1c 24             	mov    (%esp),%ebx
    10a3:	c3                   	ret    
    10a4:	66 90                	xchg   %ax,%ax
    10a6:	66 90                	xchg   %ax,%ax
    10a8:	66 90                	xchg   %ax,%ax
    10aa:	66 90                	xchg   %ax,%ax
    10ac:	66 90                	xchg   %ax,%ax
    10ae:	66 90                	xchg   %ax,%ax

000010b0 <deregister_tm_clones>:
    10b0:	e8 e0 00 00 00       	call   1195 <__x86.get_pc_thunk.dx>
    10b5:	81 c2 4b 2f 00 00    	add    $0x2f4b,%edx
    10bb:	8d 8a 1c 00 00 00    	lea    0x1c(%edx),%ecx
    10c1:	8d 82 1c 00 00 00    	lea    0x1c(%edx),%eax
    10c7:	39 c8                	cmp    %ecx,%eax
    10c9:	74 1d                	je     10e8 <deregister_tm_clones+0x38>
    10cb:	8b 82 ec ff ff ff    	mov    -0x14(%edx),%eax
    10d1:	85 c0                	test   %eax,%eax
    10d3:	74 13                	je     10e8 <deregister_tm_clones+0x38>
    10d5:	55                   	push   %ebp
    10d6:	89 e5                	mov    %esp,%ebp
    10d8:	83 ec 14             	sub    $0x14,%esp
    10db:	51                   	push   %ecx
    10dc:	ff d0                	call   *%eax
    10de:	83 c4 10             	add    $0x10,%esp
    10e1:	c9                   	leave  
    10e2:	c3                   	ret    
    10e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    10e7:	90                   	nop
    10e8:	c3                   	ret    
    10e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000010f0 <register_tm_clones>:
    10f0:	e8 a0 00 00 00       	call   1195 <__x86.get_pc_thunk.dx>
    10f5:	81 c2 0b 2f 00 00    	add    $0x2f0b,%edx
    10fb:	55                   	push   %ebp
    10fc:	89 e5                	mov    %esp,%ebp
    10fe:	53                   	push   %ebx
    10ff:	8d 8a 1c 00 00 00    	lea    0x1c(%edx),%ecx
    1105:	8d 82 1c 00 00 00    	lea    0x1c(%edx),%eax
    110b:	83 ec 04             	sub    $0x4,%esp
    110e:	29 c8                	sub    %ecx,%eax
    1110:	c1 f8 02             	sar    $0x2,%eax
    1113:	89 c3                	mov    %eax,%ebx
    1115:	c1 eb 1f             	shr    $0x1f,%ebx
    1118:	01 d8                	add    %ebx,%eax
    111a:	d1 f8                	sar    %eax
    111c:	74 14                	je     1132 <register_tm_clones+0x42>
    111e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    1124:	85 d2                	test   %edx,%edx
    1126:	74 0a                	je     1132 <register_tm_clones+0x42>
    1128:	83 ec 08             	sub    $0x8,%esp
    112b:	50                   	push   %eax
    112c:	51                   	push   %ecx
    112d:	ff d2                	call   *%edx
    112f:	83 c4 10             	add    $0x10,%esp
    1132:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1135:	c9                   	leave  
    1136:	c3                   	ret    
    1137:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    113e:	66 90                	xchg   %ax,%ax

00001140 <__do_global_dtors_aux>:
    1140:	55                   	push   %ebp
    1141:	89 e5                	mov    %esp,%ebp
    1143:	53                   	push   %ebx
    1144:	e8 57 ff ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    1149:	81 c3 b7 2e 00 00    	add    $0x2eb7,%ebx
    114f:	83 ec 04             	sub    $0x4,%esp
    1152:	80 bb 1c 00 00 00 00 	cmpb   $0x0,0x1c(%ebx)
    1159:	75 27                	jne    1182 <__do_global_dtors_aux+0x42>
    115b:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    1161:	85 c0                	test   %eax,%eax
    1163:	74 11                	je     1176 <__do_global_dtors_aux+0x36>
    1165:	83 ec 0c             	sub    $0xc,%esp
    1168:	ff b3 18 00 00 00    	pushl  0x18(%ebx)
    116e:	e8 dd fe ff ff       	call   1050 <__cxa_finalize@plt>
    1173:	83 c4 10             	add    $0x10,%esp
    1176:	e8 35 ff ff ff       	call   10b0 <deregister_tm_clones>
    117b:	c6 83 1c 00 00 00 01 	movb   $0x1,0x1c(%ebx)
    1182:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1185:	c9                   	leave  
    1186:	c3                   	ret    
    1187:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    118e:	66 90                	xchg   %ax,%ax

00001190 <frame_dummy>:
    1190:	e9 5b ff ff ff       	jmp    10f0 <register_tm_clones>

00001195 <__x86.get_pc_thunk.dx>:
    1195:	8b 14 24             	mov    (%esp),%edx
    1198:	c3                   	ret    

00001199 <main>:
#include <stdio.h>
void main(){
    1199:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    119d:	83 e4 f0             	and    $0xfffffff0,%esp
    11a0:	ff 71 fc             	pushl  -0x4(%ecx)
    11a3:	55                   	push   %ebp
    11a4:	89 e5                	mov    %esp,%ebp
    11a6:	53                   	push   %ebx
    11a7:	51                   	push   %ecx
    11a8:	83 ec 20             	sub    $0x20,%esp
    11ab:	e8 f0 fe ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    11b0:	81 c3 50 2e 00 00    	add    $0x2e50,%ebx
	printf("x = %u = %d\n ", x,x);
	printf("u = %u = %d\n ", u,u);
	printf("si = %u = %d\n ", si,si);
*/

	unsigned int x = 134;
    11b6:	c7 45 f4 86 00 00 00 	movl   $0x86,-0xc(%ebp)
	unsigned int y = 246;
    11bd:	c7 45 f0 f6 00 00 00 	movl   $0xf6,-0x10(%ebp)
	int m = x;
    11c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
    11c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
	int n = y;
    11ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
    11cd:	89 45 e8             	mov    %eax,-0x18(%ebp)
	unsigned int z1 = x-y;
    11d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
    11d3:	2b 45 f0             	sub    -0x10(%ebp),%eax
    11d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
	unsigned int z2 = x+y;
    11d9:	8b 55 f4             	mov    -0xc(%ebp),%edx
    11dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
    11df:	01 d0                	add    %edx,%eax
    11e1:	89 45 e0             	mov    %eax,-0x20(%ebp)
	int k1 = m - m;
    11e4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
	int k2 = m + n;
    11eb:	8b 55 ec             	mov    -0x14(%ebp),%edx
    11ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
    11f1:	01 d0                	add    %edx,%eax
    11f3:	89 45 d8             	mov    %eax,-0x28(%ebp)
	printf("z1 = %u\n",z1);
    11f6:	83 ec 08             	sub    $0x8,%esp
    11f9:	ff 75 e4             	pushl  -0x1c(%ebp)
    11fc:	8d 83 08 e0 ff ff    	lea    -0x1ff8(%ebx),%eax
    1202:	50                   	push   %eax
    1203:	e8 28 fe ff ff       	call   1030 <printf@plt>
    1208:	83 c4 10             	add    $0x10,%esp
	printf("z2=%u\n",z2);
    120b:	83 ec 08             	sub    $0x8,%esp
    120e:	ff 75 e0             	pushl  -0x20(%ebp)
    1211:	8d 83 11 e0 ff ff    	lea    -0x1fef(%ebx),%eax
    1217:	50                   	push   %eax
    1218:	e8 13 fe ff ff       	call   1030 <printf@plt>
    121d:	83 c4 10             	add    $0x10,%esp
	printf("k1=%d\n",k1);
    1220:	83 ec 08             	sub    $0x8,%esp
    1223:	ff 75 dc             	pushl  -0x24(%ebp)
    1226:	8d 83 18 e0 ff ff    	lea    -0x1fe8(%ebx),%eax
    122c:	50                   	push   %eax
    122d:	e8 fe fd ff ff       	call   1030 <printf@plt>
    1232:	83 c4 10             	add    $0x10,%esp
	printf("k2 = %d\n",k2);
    1235:	83 ec 08             	sub    $0x8,%esp
    1238:	ff 75 d8             	pushl  -0x28(%ebp)
    123b:	8d 83 1f e0 ff ff    	lea    -0x1fe1(%ebx),%eax
    1241:	50                   	push   %eax
    1242:	e8 e9 fd ff ff       	call   1030 <printf@plt>
    1247:	83 c4 10             	add    $0x10,%esp
}
    124a:	90                   	nop
    124b:	8d 65 f8             	lea    -0x8(%ebp),%esp
    124e:	59                   	pop    %ecx
    124f:	5b                   	pop    %ebx
    1250:	5d                   	pop    %ebp
    1251:	8d 61 fc             	lea    -0x4(%ecx),%esp
    1254:	c3                   	ret    
    1255:	66 90                	xchg   %ax,%ax
    1257:	66 90                	xchg   %ax,%ax
    1259:	66 90                	xchg   %ax,%ax
    125b:	66 90                	xchg   %ax,%ax
    125d:	66 90                	xchg   %ax,%ax
    125f:	90                   	nop

00001260 <__libc_csu_init>:
    1260:	55                   	push   %ebp
    1261:	57                   	push   %edi
    1262:	56                   	push   %esi
    1263:	53                   	push   %ebx
    1264:	e8 37 fe ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    1269:	81 c3 97 2d 00 00    	add    $0x2d97,%ebx
    126f:	83 ec 0c             	sub    $0xc,%esp
    1272:	8b 6c 24 28          	mov    0x28(%esp),%ebp
    1276:	e8 85 fd ff ff       	call   1000 <_init>
    127b:	8d b3 f8 fe ff ff    	lea    -0x108(%ebx),%esi
    1281:	8d 83 f4 fe ff ff    	lea    -0x10c(%ebx),%eax
    1287:	29 c6                	sub    %eax,%esi
    1289:	c1 fe 02             	sar    $0x2,%esi
    128c:	74 1f                	je     12ad <__libc_csu_init+0x4d>
    128e:	31 ff                	xor    %edi,%edi
    1290:	83 ec 04             	sub    $0x4,%esp
    1293:	55                   	push   %ebp
    1294:	ff 74 24 2c          	pushl  0x2c(%esp)
    1298:	ff 74 24 2c          	pushl  0x2c(%esp)
    129c:	ff 94 bb f4 fe ff ff 	call   *-0x10c(%ebx,%edi,4)
    12a3:	83 c7 01             	add    $0x1,%edi
    12a6:	83 c4 10             	add    $0x10,%esp
    12a9:	39 fe                	cmp    %edi,%esi
    12ab:	75 e3                	jne    1290 <__libc_csu_init+0x30>
    12ad:	83 c4 0c             	add    $0xc,%esp
    12b0:	5b                   	pop    %ebx
    12b1:	5e                   	pop    %esi
    12b2:	5f                   	pop    %edi
    12b3:	5d                   	pop    %ebp
    12b4:	c3                   	ret    
    12b5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    12bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000012c0 <__libc_csu_fini>:
    12c0:	c3                   	ret    

Disassembly of section .fini:

000012c4 <_fini>:
    12c4:	53                   	push   %ebx
    12c5:	83 ec 08             	sub    $0x8,%esp
    12c8:	e8 d3 fd ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    12cd:	81 c3 33 2d 00 00    	add    $0x2d33,%ebx
    12d3:	83 c4 08             	add    $0x8,%esp
    12d6:	5b                   	pop    %ebx
    12d7:	c3                   	ret    
